{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.module.ts","webpack:///src/app/login-form/login-form.component.ts","webpack:///src/app/login-form/login-form.component.html","webpack:///src/app/register-form/register-form.component.ts","webpack:///src/app/register-form/register-form.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppModule","injector","registerFormComponent","customElements","define","loginFormComponent","declarations","imports","providers","LoginFormComponent","buttonlabel","console","log","selector","templateUrl","styleUrls","RegisterFormComponent","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, Injector } from '@angular/core';\nimport { createCustomElement } from '@angular/elements';\n\n// import { AppComponent } from './app.component';\nimport { RegisterFormComponent } from './register-form/register-form.component';\nimport { LoginFormComponent } from './login-form/login-form.component';\n\n@NgModule({\n  declarations: [\n    // AppComponent,\n    RegisterFormComponent,\n    LoginFormComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  // bootstrap: [AppComponent]\n})\nexport class AppModule { \n  constructor(private injector: Injector) {}\n\n  ngDoBootstrap() {\n  \t\n  \t// Note: my custom component are \"MyCustomComponentExample1\" and \"MyCustomComponentExample2\"\n  \t// you can have your own\n  \t\n    const registerFormComponent = createCustomElement(RegisterFormComponent, {injector: this.injector});\n    customElements.define('register-form', registerFormComponent);\n    \n    const loginFormComponent = createCustomElement(LoginFormComponent, {injector: this.injector});\n    customElements.define('login-form', loginFormComponent);\n  }\n}\n","import { Component, OnInit, OnChanges, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss']\n})\nexport class LoginFormComponent implements OnInit {\n\n  @Input() buttonlabel: string = \"Login\";\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges() {\n    console.log(\"Label changed: \", this.buttonlabel);\n  }\n\n}\n","<p>login-form works!</p>\n\n<div class=\"container\">\n    <form action=\"\">\n        <div>\n            <label for=\"username\">Email / Username</label>\n            <input type=\"text\" id=\"username\" placeholder=\"Email / Username\">\n        </div>\n        <div>\n            <label for=\"password\">Password</label>\n            <input type=\"text\" id=\"password\" placeholder=\"Password\">\n        </div>\n        <div>\n            <button>{{ buttonlabel }}</button>\n        </div>\n    </form>\n</div>\n","import { Component, OnInit, OnChanges, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-register-form',\n  templateUrl: './register-form.component.html',\n  styleUrls: ['./register-form.component.scss']\n})\nexport class RegisterFormComponent implements OnInit {\n\n  @Input() buttonlabel: string = \"Register\";\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges() {\n    console.log(\"Label changed: \", this.buttonlabel);\n  }\n\n}\n","<p>register-form works!</p>\n\n<div class=\"container\">\n    <form action=\"\">\n        <div>\n            <label for=\"username\">Email / Username</label>\n            <input type=\"text\" id=\"username\" placeholder=\"Email / Username\">\n        </div>\n        <div>\n            <label for=\"password\">Password</label>\n            <input type=\"text\" id=\"password\" placeholder=\"Password\">\n        </div>\n        <div>\n            <label for=\"name\">Name</label>\n            <input type=\"text\" id=\"name\" placeholder=\"Name\">\n        </div>\n        <div>\n            <label for=\"dob\">Date of birth</label>\n            <input type=\"calendar\" id=\"dob\" placeholder=\"Date of birth\">\n        </div>\n        <div>\n            <button>{{ buttonlabel }}</button>\n        </div>\n    </form>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}