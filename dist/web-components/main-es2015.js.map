{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.module.ts","./src/app/login-form/login-form.component.ts","./src/app/login-form/login-form.component.html","./src/app/register-form/register-form.component.ts","./src/app/register-form/register-form.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, Injector } from '@angular/core';\nimport { createCustomElement } from '@angular/elements';\n\n// import { AppComponent } from './app.component';\nimport { RegisterFormComponent } from './register-form/register-form.component';\nimport { LoginFormComponent } from './login-form/login-form.component';\n\n@NgModule({\n  declarations: [\n    // AppComponent,\n    RegisterFormComponent,\n    LoginFormComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  // bootstrap: [AppComponent]\n})\nexport class AppModule { \n  constructor(private injector: Injector) {}\n\n  ngDoBootstrap() {\n  \t\n  \t// Note: my custom component are \"MyCustomComponentExample1\" and \"MyCustomComponentExample2\"\n  \t// you can have your own\n  \t\n    const registerFormComponent = createCustomElement(RegisterFormComponent, {injector: this.injector});\n    customElements.define('register-form', registerFormComponent);\n    \n    const loginFormComponent = createCustomElement(LoginFormComponent, {injector: this.injector});\n    customElements.define('login-form', loginFormComponent);\n  }\n}\n","import { Component, OnInit, OnChanges, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss']\n})\nexport class LoginFormComponent implements OnInit {\n\n  @Input() buttonlabel: string = \"Login\";\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges() {\n    console.log(\"Label changed: \", this.buttonlabel);\n  }\n\n}\n","<p>login-form works!</p>\n\n<div class=\"container\">\n    <form action=\"\">\n        <div>\n            <label for=\"username\">Email / Username</label>\n            <input type=\"text\" id=\"username\" placeholder=\"Email / Username\">\n        </div>\n        <div>\n            <label for=\"password\">Password</label>\n            <input type=\"text\" id=\"password\" placeholder=\"Password\">\n        </div>\n        <div>\n            <button>{{ buttonlabel }}</button>\n        </div>\n    </form>\n</div>\n","import { Component, OnInit, OnChanges, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-register-form',\n  templateUrl: './register-form.component.html',\n  styleUrls: ['./register-form.component.scss']\n})\nexport class RegisterFormComponent implements OnInit {\n\n  @Input() buttonlabel: string = \"Register\";\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges() {\n    console.log(\"Label changed: \", this.buttonlabel);\n  }\n\n}\n","<p>register-form works!</p>\n\n<div class=\"container\">\n    <form action=\"\">\n        <div>\n            <label for=\"username\">Email / Username</label>\n            <input type=\"text\" id=\"username\" placeholder=\"Email / Username\">\n        </div>\n        <div>\n            <label for=\"password\">Password</label>\n            <input type=\"text\" id=\"password\" placeholder=\"Password\">\n        </div>\n        <div>\n            <label for=\"name\">Name</label>\n            <input type=\"text\" id=\"name\" placeholder=\"Name\">\n        </div>\n        <div>\n            <label for=\"dob\">Date of birth</label>\n            <input type=\"calendar\" id=\"dob\" placeholder=\"Date of birth\">\n        </div>\n        <div>\n            <button>{{ buttonlabel }}</button>\n        </div>\n    </form>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}